{"ast":null,"code":"var _jsxFileName = \"/Users/stephenkeating/Development/code/stock-tracker-ttp/frontend/src/Pages/Signup.js\";\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport userActions from '../redux/actions.js';\n\nconst Signup = props => {\n  // initializing dispatch\n  const dispatch = useDispatch(); // Setting up local state using the useState hook\n\n  const [signupForm, setSignupForm] = useState({\n    name: '',\n    email: '',\n    password: ''\n  }); // Controlled form functions\n\n  const handleChange = e => setSignupForm({ ...signupForm,\n    [e.target.name]: e.target.value\n  }); // Pattern without error handling:\n  // const handleSubmit = e => {\n  //   e.preventDefault();\n  //   const { history } = props;\n  //   dispatch(userActions.newUserToDB(signupForm));\n  //   history.push('/');\n  // };\n  // Pattern with error handling:\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const {\n      history\n    } = props;\n    userActions.newUserToDB(signupForm).then(data => {\n      if (data.errors) {\n        alert(data.errors);\n        return;\n      } else {\n        console.log(data);\n        dispatch(userActions.setUserAction(data.user));\n        dispatch(userActions.setTransactionsAction(data.transactions));\n        dispatch(userActions.setPortfolioAction(data.shares_map));\n        localStorage.setItem('token', data.token);\n        history.push('/');\n      }\n    });\n  }; // Destructuring keys from our local state to use in the form\n\n\n  const {\n    name,\n    email,\n    password\n  } = signupForm; // Component code\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Signup Page\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    value: name,\n    onChange: handleChange,\n    placeholder: \"Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    placeholder: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    placeholder: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }));\n};\n\nexport default Signup;","map":{"version":3,"sources":["/Users/stephenkeating/Development/code/stock-tracker-ttp/frontend/src/Pages/Signup.js"],"names":["React","useState","useDispatch","userActions","Signup","props","dispatch","signupForm","setSignupForm","name","email","password","handleChange","e","target","value","handleSubmit","preventDefault","history","newUserToDB","then","data","errors","alert","console","log","setUserAction","user","setTransactionsAction","transactions","setPortfolioAction","shares_map","localStorage","setItem","token","push"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport userActions from '../redux/actions.js';\n\nconst Signup = props => {\n  // initializing dispatch\n  const dispatch = useDispatch();\n\n  // Setting up local state using the useState hook\n  const [signupForm, setSignupForm] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n\n  // Controlled form functions\n  const handleChange = e =>\n    setSignupForm({ ...signupForm, [e.target.name]: e.target.value });\n\n  // Pattern without error handling:\n  // const handleSubmit = e => {\n  //   e.preventDefault();\n  //   const { history } = props;\n  //   dispatch(userActions.newUserToDB(signupForm));\n  //   history.push('/');\n  // };\n\n  // Pattern with error handling:\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { history } = props;\n    userActions.newUserToDB(signupForm)\n    .then(data => {\n        if(data.errors) {\n          alert(data.errors);\n          return;\n        } else {\n        console.log(data)\n        dispatch(userActions.setUserAction(data.user));\n        dispatch(userActions.setTransactionsAction(data.transactions));\n        dispatch(userActions.setPortfolioAction(data.shares_map));\n        localStorage.setItem('token', data.token);\n        history.push('/');\n    }\n    })};\n\n  // Destructuring keys from our local state to use in the form\n  const { name, email, password } = signupForm;\n\n  // Component code\n  return (\n    <form onSubmit={handleSubmit}>\n      <h1>Signup Page</h1>\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={handleChange}\n        placeholder=\"Name\"\n      />\n      <input\n        type=\"text\"\n        name=\"email\"\n        value={email}\n        onChange={handleChange}\n        placeholder=\"Email\"\n      />\n      <input\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        onChange={handleChange}\n        placeholder=\"Password\"\n      />\n      <input type=\"submit\" />\n    </form>\n  );\n};\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}