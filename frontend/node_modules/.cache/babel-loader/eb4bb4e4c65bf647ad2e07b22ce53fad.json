{"ast":null,"code":"var _jsxFileName = \"/Users/stephenkeating/Development/code/stock-tracker-ttp/frontend/src/Components/PurchaseForm.js\";\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport userActions from '../redux/actions';\n\nconst PurchaseForm = props => {\n  // initializing dispatch\n  const dispatch = useDispatch(); // Setting up local state using the useState hook\n\n  const [quoteForm, setQuoteForm] = useState({\n    ticker: '',\n    quantity: 0\n  }); // The following could be used for error handling:\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(quoteForm);\n    userActions.getQuote(quoteForm).then(data => {\n      if (!data) {\n        // console.log(data.errors);\n        alert(data.errors);\n        return;\n      } else {\n        console.log(data);\n        dispatch(userActions.setUserAction(data.user));\n        dispatch(userActions.setTransactionsAction(data.transactions));\n        localStorage.setItem('token', data.token);\n        props.history.push('/');\n      }\n    });\n  };\n\n  const handleTickerChange = e => setQuoteForm({ ...quoteForm,\n    [e.target.name]: e.target.value.toUpperCase()\n  });\n\n  const handleQuantityChange = e => setQuoteForm({ ...quoteForm,\n    [e.target.name]: e.target.value\n  }); // Destructuring keys from our local state to use in the form\n\n\n  const {\n    ticker,\n    quantity\n  } = quoteForm; // Component code\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"ticker\",\n    value: ticker,\n    onChange: handleTickerChange,\n    placeholder: \"Ticker\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"quantity\",\n    value: quantity,\n    onChange: handleQuantityChange,\n    placeholder: \"Quantity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Get Quote\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }));\n};\n\nexport default PurchaseForm;","map":{"version":3,"sources":["/Users/stephenkeating/Development/code/stock-tracker-ttp/frontend/src/Components/PurchaseForm.js"],"names":["React","useState","useDispatch","userActions","PurchaseForm","props","dispatch","quoteForm","setQuoteForm","ticker","quantity","handleSubmit","e","preventDefault","console","log","getQuote","then","data","alert","errors","setUserAction","user","setTransactionsAction","transactions","localStorage","setItem","token","history","push","handleTickerChange","target","name","value","toUpperCase","handleQuantityChange"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,WAAP,MAAwB,kBAAxB;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B;AACA,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B,CAF4B,CAG5B;;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC;AACzCQ,IAAAA,MAAM,EAAE,EADiC;AAEzCC,IAAAA,QAAQ,EAAE;AAF+B,GAAD,CAA1C,CAJ4B,CAS5B;;AACA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,SAAZ;AACAJ,IAAAA,WAAW,CAACa,QAAZ,CAAqBT,SAArB,EACCU,IADD,CACMC,IAAI,IAAI;AACZ,UAAG,CAACA,IAAJ,EAAU;AACN;AACAC,QAAAA,KAAK,CAACD,IAAI,CAACE,MAAN,CAAL;AACA;AACH,OAJD,MAIO;AACLN,QAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACAZ,QAAAA,QAAQ,CAACH,WAAW,CAACkB,aAAZ,CAA0BH,IAAI,CAACI,IAA/B,CAAD,CAAR;AACAhB,QAAAA,QAAQ,CAACH,WAAW,CAACoB,qBAAZ,CAAkCL,IAAI,CAACM,YAAvC,CAAD,CAAR;AACAC,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BR,IAAI,CAACS,KAAnC;AACAtB,QAAAA,KAAK,CAACuB,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACD;AACF,KAbD;AAcD,GAjBD;;AAmBA,QAAMC,kBAAkB,GAAGlB,CAAC,IAC1BJ,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgB,KAACK,CAAC,CAACmB,MAAF,CAASC,IAAV,GAAiBpB,CAAC,CAACmB,MAAF,CAASE,KAAT,CAAeC,WAAf;AAAjC,GAAD,CADd;;AAGE,QAAMC,oBAAoB,GAAGvB,CAAC,IAC9BJ,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgB,KAACK,CAAC,CAACmB,MAAF,CAASC,IAAV,GAAiBpB,CAAC,CAACmB,MAAF,CAASE;AAA1C,GAAD,CADZ,CAhC0B,CAmC5B;;;AACA,QAAM;AAAExB,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAuBH,SAA7B,CApC4B,CAsC5B;;AACA,SACE;AAAM,IAAA,QAAQ,EAAEI,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,KAAK,EAAEF,MAHT;AAIE,IAAA,QAAQ,EAAEqB,kBAJZ;AAKE,IAAA,WAAW,EAAC,QALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAEpB,QAHT;AAKE,IAAA,QAAQ,EAAEyB,oBALZ;AAME,IAAA,WAAW,EAAC,UANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAgBE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CADF;AAoBD,CA3DD;;AA6DA,eAAe/B,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport userActions from '../redux/actions';\n\nconst PurchaseForm = props => {\n  // initializing dispatch\n  const dispatch = useDispatch();\n  // Setting up local state using the useState hook\n  const [quoteForm, setQuoteForm] = useState({\n    ticker: '',\n    quantity: 0\n  });\n\n  // The following could be used for error handling:\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(quoteForm)\n    userActions.getQuote(quoteForm)\n    .then(data => {\n      if(!data) {\n          // console.log(data.errors);\n          alert(data.errors);\n          return;\n      } else {\n        console.log(data)\n        dispatch(userActions.setUserAction(data.user));\n        dispatch(userActions.setTransactionsAction(data.transactions));\n        localStorage.setItem('token', data.token);\n        props.history.push('/');\n      }\n    })\n  };\n\n  const handleTickerChange = e =>\n    setQuoteForm({ ...quoteForm, [e.target.name]: e.target.value.toUpperCase() });\n  \n    const handleQuantityChange = e =>\n    setQuoteForm({ ...quoteForm, [e.target.name]: e.target.value });\n\n  // Destructuring keys from our local state to use in the form\n  const { ticker, quantity } = quoteForm;\n\n  // Component code\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        name=\"ticker\"\n        value={ticker}\n        onChange={handleTickerChange}\n        placeholder=\"Ticker\"\n      />\n      <input\n        type=\"number\"\n        name=\"quantity\"\n        value={quantity}\n\n        onChange={handleQuantityChange}\n        placeholder=\"Quantity\"\n      />\n      <input type=\"submit\" value='Get Quote'/>\n    </form>\n  );\n};\n\nexport default PurchaseForm;\n"]},"metadata":{},"sourceType":"module"}