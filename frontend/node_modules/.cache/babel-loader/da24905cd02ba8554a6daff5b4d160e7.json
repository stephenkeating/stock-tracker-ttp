{"ast":null,"code":"var _jsxFileName = \"/Users/stephenkeating/Development/code/stock-tracker-ttp/frontend/src/Components/PurchaseForm.js\";\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport userActions from '../redux/actions';\n\nconst PurchaseForm = props => {\n  // initializing dispatch\n  const dispatch = useDispatch(); // Setting up local state using the useState hook\n\n  const [quoteForm, setQuoteForm] = useState({\n    ticker: '',\n    quantity: 0,\n    price: 0\n  }); // controlled form functions\n  // login without error handling\n  // const handleSubmit = e => {\n  //   e.preventDefault();\n  //   dispatch(userActions.loginUserToDB(quoteForm));\n  //   props.history.push('/');\n  // };\n  // The following could be used for error handling:\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(quoteForm); // userActions.loginUserToDB(quoteForm)\n    // .then(data => {\n    //   if(!data.user) {\n    //       // console.log(data.errors);\n    //       alert(data.errors);\n    //       return;\n    //   } else {\n    //     console.log(data)\n    //     dispatch(userActions.setUserAction(data.user));\n    //     dispatch(userActions.setTransactionsAction(data.transactions));\n    //     localStorage.setItem('token', data.token);\n    //     props.history.push('/');\n    //   }\n    // })\n  };\n\n  const handleChange = e => setQuoteForm({ ...quoteForm,\n    [e.target.name]: e.target.value\n  }); // Destructuring keys from our local state to use in the form\n\n\n  const {\n    ticker,\n    quantity\n  } = quoteForm; // Component code\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"ticker\",\n    value: ticker,\n    onChange: handleChange,\n    placeholder: \"Ticker\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"quantity\",\n    value: quantity,\n    onChange: handleChange,\n    placeholder: \"Quantity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }));\n};\n\nexport default PurchaseForm;","map":{"version":3,"sources":["/Users/stephenkeating/Development/code/stock-tracker-ttp/frontend/src/Components/PurchaseForm.js"],"names":["React","useState","useDispatch","userActions","PurchaseForm","props","dispatch","quoteForm","setQuoteForm","ticker","quantity","price","handleSubmit","e","preventDefault","console","log","handleChange","target","name","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,WAAP,MAAwB,kBAAxB;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B;AACA,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B,CAF4B,CAG5B;;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC;AACzCQ,IAAAA,MAAM,EAAE,EADiC;AAEzCC,IAAAA,QAAQ,EAAE,CAF+B;AAGzCC,IAAAA,KAAK,EAAE;AAHkC,GAAD,CAA1C,CAJ4B,CAU5B;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,SAAZ,EAFwB,CAGxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAjBD;;AAmBA,QAAMU,YAAY,GAAGJ,CAAC,IACpBL,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgB,KAACM,CAAC,CAACK,MAAF,CAASC,IAAV,GAAiBN,CAAC,CAACK,MAAF,CAASE;AAA1C,GAAD,CADd,CAtC4B,CAyC5B;;;AACA,QAAM;AAAEX,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAuBH,SAA7B,CA1C4B,CA4C5B;;AACA,SACE;AAAM,IAAA,QAAQ,EAAEK,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,KAAK,EAAEH,MAHT;AAIE,IAAA,QAAQ,EAAEQ,YAJZ;AAKE,IAAA,WAAW,EAAC,QALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAEP,QAHT;AAIE,IAAA,QAAQ,EAAEO,YAJZ;AAKE,IAAA,WAAW,EAAC,UALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAeE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF;AAmBD,CAhED;;AAkEA,eAAeb,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport userActions from '../redux/actions';\n\nconst PurchaseForm = props => {\n  // initializing dispatch\n  const dispatch = useDispatch();\n  // Setting up local state using the useState hook\n  const [quoteForm, setQuoteForm] = useState({\n    ticker: '',\n    quantity: 0,\n    price: 0\n  });\n\n  // controlled form functions\n  // login without error handling\n  // const handleSubmit = e => {\n  //   e.preventDefault();\n  //   dispatch(userActions.loginUserToDB(quoteForm));\n  //   props.history.push('/');\n  // };\n\n  // The following could be used for error handling:\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(quoteForm)\n    // userActions.loginUserToDB(quoteForm)\n    // .then(data => {\n    //   if(!data.user) {\n    //       // console.log(data.errors);\n    //       alert(data.errors);\n    //       return;\n    //   } else {\n    //     console.log(data)\n    //     dispatch(userActions.setUserAction(data.user));\n    //     dispatch(userActions.setTransactionsAction(data.transactions));\n    //     localStorage.setItem('token', data.token);\n    //     props.history.push('/');\n    //   }\n    // })\n  };\n\n  const handleChange = e =>\n    setQuoteForm({ ...quoteForm, [e.target.name]: e.target.value });\n\n  // Destructuring keys from our local state to use in the form\n  const { ticker, quantity } = quoteForm;\n\n  // Component code\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        name=\"ticker\"\n        value={ticker}\n        onChange={handleChange}\n        placeholder=\"Ticker\"\n      />\n      <input\n        type=\"number\"\n        name=\"quantity\"\n        value={quantity}\n        onChange={handleChange}\n        placeholder=\"Quantity\"\n      />\n      <input type=\"submit\" />\n    </form>\n  );\n};\n\nexport default PurchaseForm;\n"]},"metadata":{},"sourceType":"module"}