{"ast":null,"code":"var _jsxFileName = \"/Users/stephenkeating/Development/code/stock-tracker-ttp/frontend/src/Pages/Login.js\";\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport userActions from '../redux/actions';\n\nconst LoginPage = props => {\n  // initializing dispatch\n  const dispatch = useDispatch(); // Setting up local state using the useState hook\n\n  const [loginForm, setLoginForm] = useState({\n    email: '',\n    password: ''\n  }); // controlled form functions\n  // login without error handling\n  // const handleSubmit = e => {\n  //   e.preventDefault();\n  //   dispatch(userActions.loginUserToDB(loginForm));\n  //   props.history.push('/');\n  // };\n  // The following could be used for error handling:\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    userActions.loginUserToDB(loginForm).then(data => {\n      if (!data.user) {\n        // console.log(data.errors);\n        alert(data.errors);\n        return;\n      } else {\n        // console.log(data)\n        dispatch(userActions.setUserAction(data.user));\n        dispatch(userActions.setTransactionsAction(data.transactions));\n        dispatch(userActions.setPortfolioAction(data.shares_map));\n        localStorage.setItem('token', data.token);\n        props.history.push('/portfolio');\n      }\n    });\n  };\n\n  const handleChange = e => setLoginForm({ ...loginForm,\n    [e.target.name]: e.target.value\n  }); // Destructuring keys from our local state to use in the form\n\n\n  const {\n    email,\n    password\n  } = loginForm; // Component code\n\n  return React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"auth-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Login Page\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    placeholder: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    placeholder: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }))));\n};\n\nexport default LoginPage;","map":{"version":3,"sources":["/Users/stephenkeating/Development/code/stock-tracker-ttp/frontend/src/Pages/Login.js"],"names":["React","useState","useDispatch","userActions","LoginPage","props","dispatch","loginForm","setLoginForm","email","password","handleSubmit","e","preventDefault","loginUserToDB","then","data","user","alert","errors","setUserAction","setTransactionsAction","transactions","setPortfolioAction","shares_map","localStorage","setItem","token","history","push","handleChange","target","name","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,WAAP,MAAwB,kBAAxB;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB;AACA,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B,CAFyB,CAGzB;;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC;AACzCQ,IAAAA,KAAK,EAAE,EADkC;AAEzCC,IAAAA,QAAQ,EAAE;AAF+B,GAAD,CAA1C,CAJyB,CASzB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAV,IAAAA,WAAW,CAACW,aAAZ,CAA0BP,SAA1B,EACCQ,IADD,CACMC,IAAI,IAAI;AACZ,UAAG,CAACA,IAAI,CAACC,IAAT,EAAe;AACX;AACAC,QAAAA,KAAK,CAACF,IAAI,CAACG,MAAN,CAAL;AACA;AACH,OAJD,MAIO;AACL;AACAb,QAAAA,QAAQ,CAACH,WAAW,CAACiB,aAAZ,CAA0BJ,IAAI,CAACC,IAA/B,CAAD,CAAR;AACAX,QAAAA,QAAQ,CAACH,WAAW,CAACkB,qBAAZ,CAAkCL,IAAI,CAACM,YAAvC,CAAD,CAAR;AACAhB,QAAAA,QAAQ,CAACH,WAAW,CAACoB,kBAAZ,CAA+BP,IAAI,CAACQ,UAApC,CAAD,CAAR;AACAC,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BV,IAAI,CAACW,KAAnC;AACAtB,QAAAA,KAAK,CAACuB,OAAN,CAAcC,IAAd,CAAmB,YAAnB;AACD;AACF,KAdD;AAeD,GAjBD;;AAmBA,QAAMC,YAAY,GAAGlB,CAAC,IACpBJ,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgB,KAACK,CAAC,CAACmB,MAAF,CAASC,IAAV,GAAiBpB,CAAC,CAACmB,MAAF,CAASE;AAA1C,GAAD,CADd,CArCyB,CAwCzB;;;AACA,QAAM;AAAExB,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBH,SAA5B,CAzCyB,CA2CzB;;AACA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAEI,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAEF,KAHT;AAIE,IAAA,QAAQ,EAAEqB,YAJZ;AAKE,IAAA,WAAW,EAAC,OALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EASE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAEpB,QAHT;AAIE,IAAA,QAAQ,EAAEoB,YAJZ;AAKE,IAAA,WAAW,EAAC,UALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,EAiBE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADF,CADF,CADF;AAyBD,CArED;;AAuEA,eAAe1B,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport userActions from '../redux/actions';\n\nconst LoginPage = props => {\n  // initializing dispatch\n  const dispatch = useDispatch();\n  // Setting up local state using the useState hook\n  const [loginForm, setLoginForm] = useState({\n    email: '',\n    password: ''\n  });\n\n  // controlled form functions\n  // login without error handling\n  // const handleSubmit = e => {\n  //   e.preventDefault();\n  //   dispatch(userActions.loginUserToDB(loginForm));\n  //   props.history.push('/');\n  // };\n\n  // The following could be used for error handling:\n  const handleSubmit = e => {\n    e.preventDefault();\n    userActions.loginUserToDB(loginForm)\n    .then(data => {\n      if(!data.user) {\n          // console.log(data.errors);\n          alert(data.errors);\n          return;\n      } else {\n        // console.log(data)\n        dispatch(userActions.setUserAction(data.user));\n        dispatch(userActions.setTransactionsAction(data.transactions));\n        dispatch(userActions.setPortfolioAction(data.shares_map));\n        localStorage.setItem('token', data.token);\n        props.history.push('/portfolio');\n      }\n    })\n  };\n\n  const handleChange = e =>\n    setLoginForm({ ...loginForm, [e.target.name]: e.target.value });\n\n  // Destructuring keys from our local state to use in the form\n  const { email, password } = loginForm;\n\n  // Component code\n  return (\n    <div className=\"row\">\n      <div className='auth-box'>\n        <form onSubmit={handleSubmit}>\n          <h1>Login Page</h1>\n          <input\n            type=\"text\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n            placeholder=\"Email\"\n          />\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n            placeholder=\"Password\"\n          />\n          <br></br>\n          <input type=\"submit\" />\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}