{"ast":null,"code":"var _jsxFileName = \"/Users/stephenkeating/Development/code/stock-tracker-ttp/frontend/src/Components/PurchaseForm.js\";\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport userActions from '../redux/actions';\n\nconst PurchaseForm = props => {\n  // initializing dispatch\n  const dispatch = useDispatch(); // Setting up local state using the useState hook\n\n  const [quoteForm, setQuoteForm] = useState({\n    ticker: '',\n    quantity: 0,\n    quotePrice: 0,\n    showQuote: false\n  });\n\n  const handleQuoteSubmit = e => {\n    e.preventDefault();\n    console.log(quoteForm);\n\n    if (quoteForm.quantity > 0) {\n      userActions.getQuote(quoteForm).then(data => {\n        if (!data.symbol) {\n          console.log(data);\n          alert(\"Incorrect Ticker\");\n          return;\n        } else {\n          console.log(data);\n          saveQuote(data);\n        }\n\n        ;\n      });\n    } else {\n      alert('Quantity must be 1 or more.');\n    } // .then(data => {\n    //   if(!data) {\n    //       // console.log(data.errors);\n    //       alert(data.errors);\n    //       return;\n    //   } else {\n    //     console.log(data)\n    //     dispatch(userActions.setUserAction(data.user));\n    //     dispatch(userActions.setTransactionsAction(data.transactions));\n    //     localStorage.setItem('token', data.token);\n    //     props.history.push('/');\n    //   }\n\n  };\n\n  const saveQuote = data => setQuoteForm({ ...quoteForm,\n    quotePrice: data.latestPrice * quantity,\n    showQuote: true\n  });\n\n  const handleTickerChange = e => setQuoteForm({ ...quoteForm,\n    [e.target.name]: e.target.value.toUpperCase(),\n    showQuote: false\n  });\n\n  const handleQuantityChange = e => setQuoteForm({ ...quoteForm,\n    [e.target.name]: Math.round(e.target.value),\n    showQuote: false\n  }); // Destructuring keys from our local state to use in the form\n\n\n  const {\n    ticker,\n    quantity,\n    showQuote,\n    quotePrice\n  } = quoteForm; // Component code\n\n  return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n    onSubmit: handleQuoteSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"ticker\",\n    value: ticker,\n    onChange: handleTickerChange,\n    placeholder: \"Ticker\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"quantity\",\n    value: quantity,\n    onChange: handleQuantityChange,\n    placeholder: \"Quantity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Get Quote\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), showQuote ? React.createElement(\"form\", {\n    onSubmit: handleQuoteSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Price:\", React.createElement(\"input\", {\n    type: \"number\",\n    name: \"quotePrice\",\n    readOnly: true,\n    value: quotePrice,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Buy Shares\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })) : null);\n};\n\nexport default PurchaseForm;","map":{"version":3,"sources":["/Users/stephenkeating/Development/code/stock-tracker-ttp/frontend/src/Components/PurchaseForm.js"],"names":["React","useState","useDispatch","userActions","PurchaseForm","props","dispatch","quoteForm","setQuoteForm","ticker","quantity","quotePrice","showQuote","handleQuoteSubmit","e","preventDefault","console","log","getQuote","then","data","symbol","alert","saveQuote","latestPrice","handleTickerChange","target","name","value","toUpperCase","handleQuantityChange","Math","round"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport userActions from '../redux/actions';\n\nconst PurchaseForm = props => {\n  // initializing dispatch\n  const dispatch = useDispatch();\n  // Setting up local state using the useState hook\n  const [quoteForm, setQuoteForm] = useState({\n    ticker: '',\n    quantity: 0,\n    quotePrice: 0,\n    showQuote: false\n  });\n\n  const handleQuoteSubmit = e => {\n    e.preventDefault();\n    console.log(quoteForm)\n    if (quoteForm.quantity > 0) {\n      userActions.getQuote(quoteForm)\n      .then(data => {\n        if(!data.symbol) {\n          console.log(data);\n          alert(\"Incorrect Ticker\");\n          return;\n        } else {\n          console.log(data)\n          saveQuote(data)\n        };\n      })\n    } else {\n      alert('Quantity must be 1 or more.')\n    }\n    // .then(data => {\n    //   if(!data) {\n    //       // console.log(data.errors);\n    //       alert(data.errors);\n    //       return;\n    //   } else {\n    //     console.log(data)\n    //     dispatch(userActions.setUserAction(data.user));\n    //     dispatch(userActions.setTransactionsAction(data.transactions));\n    //     localStorage.setItem('token', data.token);\n    //     props.history.push('/');\n    //   }\n  };\n\n  const saveQuote = data =>\n    setQuoteForm({ ...quoteForm, quotePrice: (data.latestPrice * quantity), showQuote: true});\n\n  const handleTickerChange = e =>\n    setQuoteForm({ ...quoteForm, [e.target.name]: e.target.value.toUpperCase(), showQuote: false });\n  \n    const handleQuantityChange = e =>\n    setQuoteForm({ ...quoteForm, [e.target.name]: Math.round(e.target.value), showQuote: false });\n\n  // Destructuring keys from our local state to use in the form\n  const { ticker, quantity, showQuote, quotePrice } = quoteForm;\n\n  // Component code\n  return (\n    <>\n      <form onSubmit={handleQuoteSubmit}>\n        <input\n          type=\"text\"\n          name=\"ticker\"\n          value={ticker}\n          onChange={handleTickerChange}\n          placeholder=\"Ticker\"\n        />\n        <input\n          type=\"number\"\n          name=\"quantity\"\n          value={quantity}\n          onChange={handleQuantityChange}\n          placeholder=\"Quantity\"\n        />\n        <input type=\"submit\" value='Get Quote'/>\n      </form>\n      { showQuote\n        ? <form onSubmit={handleQuoteSubmit}>\n            Price:\n            <input\n              type=\"number\"\n              name=\"quotePrice\"\n              readOnly\n              value={quotePrice}\n            />\n            <input type=\"submit\" value='Buy Shares'/>\n          </form>\n        : null\n      }\n    </>\n  );\n};\n\nexport default PurchaseForm;\n"]},"metadata":{},"sourceType":"module"}