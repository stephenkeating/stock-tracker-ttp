{"ast":null,"code":"var _jsxFileName = \"/Users/stephenkeating/Development/code/stock-tracker-ttp/frontend/src/Components/Stock.js\";\nimport React from 'react';\n\nstockColor = () => {\n  if (this.state.open_price > this.state.current_price) {\n    return \"red\";\n  } else if (this.state.open_price < this.state.current_price) {\n    return \"green\";\n  } else {\n    return \"grey\";\n  }\n};\n\npluralize = qty => {\n  return qty === 1 ? \"Stock\" : \"Stocks\";\n};\n\nconst Stock = props => {\n  return React.createElement(\"div\", {\n    className: \"stock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: this.stockColor(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, props.ticker.toUpperCase(), \" \\u2013\\u2013 \", props.quantity, \" \", this.pluralize(this.props.qty), \" - $\"));\n};\n\nexport default Stock; // import React, { Component } from 'react'\n// const IEX_API_URL = 'https://sandbox.iexapis.com/stable/'\n// const IEX_SANDBOX_SECRET_TOKEN = process.env.REACT_APP_IEX_SANDBOX_SECRET_TOKEN\n// class Stock extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       open_price: 0,\n//       current_price: 0,\n//       qty: this.props.qty\n//     }\n//   }\n//   componentDidMount = () => {\n//     fetch(`https://cloud.iexapis.com/stable/stock/${this.props.ticker}/quote?token=${IEX_SANDBOX_SECRET_TOKEN}`)\n//       .then((res) => { return res.json() })\n//       .then((data) => { return this.setState(\n//           {current_price: data.latestPrice,\n//           open_price: data.open}\n//       ); }\n//       )\n//       .then(() => this.props.portfolioValue(this.state.current_price * this.state.qty))\n//       .catch((err) => { console.log(err) })\n//   }\n//   componentDidUpdate = (previousProps, previousState) => {\n//     if (this.props.qty !== previousProps.qty) {\n//       this.props.portfolioValue(this.state.current_price * (this.props.qty - previousProps.qty))\n//     }\n//   }\n//   stockColor = () => {\n//     if (this.state.open_price > this.state.current_price) {\n//       return \"red\"\n//     } else if (this.state.open_price < this.state.current_price) {\n//       return \"green\"\n//     } else {\n//       return \"grey\"\n//     }\n//   }\n//   pluralize = (qty) => {\n//     return qty === 1 ? \"Stock\" : \"Stocks\"\n//   }\n//   render(){\n//     return (\n//       <div className=\"stock\">\n//         <div className={this.stockColor()}>\n//           {this.props.ticker.toUpperCase()} - {this.props.qty} {this.pluralize(this.props.qty)} - ${(this.props.qty * this.state.current_price).toFixed(2)}\n//         </div>\n//       </div>\n//     )\n//   }\n// }\n// export default Stock;","map":{"version":3,"sources":["/Users/stephenkeating/Development/code/stock-tracker-ttp/frontend/src/Components/Stock.js"],"names":["React","stockColor","state","open_price","current_price","pluralize","qty","Stock","props","ticker","toUpperCase","quantity"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEEC,UAAU,GAAG,MAAM;AACjB,MAAI,KAAKC,KAAL,CAAWC,UAAX,GAAwB,KAAKD,KAAL,CAAWE,aAAvC,EAAsD;AACpD,WAAO,KAAP;AACD,GAFD,MAEO,IAAI,KAAKF,KAAL,CAAWC,UAAX,GAAwB,KAAKD,KAAL,CAAWE,aAAvC,EAAsD;AAC3D,WAAO,OAAP;AACD,GAFM,MAEA;AACL,WAAO,MAAP;AACD;AACF,CARD;;AAUAC,SAAS,GAAIC,GAAD,IAAS;AACnB,SAAOA,GAAG,KAAK,CAAR,GAAY,OAAZ,GAAsB,QAA7B;AACD,CAFD;;AAIF,MAAMC,KAAK,GAAGC,KAAK,IAAI;AAErB,SACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAE,KAAKP,UAAL,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGO,KAAK,CAACC,MAAN,CAAaC,WAAb,EADH,oBACmCF,KAAK,CAACG,QADzC,OACoD,KAAKN,SAAL,CAAe,KAAKG,KAAL,CAAWF,GAA1B,CADpD,SADF,CADF;AAOD,CATD;;AAWA,eAAeC,KAAf,C,CAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["import React from 'react';\n\n  stockColor = () => {\n    if (this.state.open_price > this.state.current_price) {\n      return \"red\"\n    } else if (this.state.open_price < this.state.current_price) {\n      return \"green\"\n    } else {\n      return \"grey\"\n    }\n  }\n\n  pluralize = (qty) => {\n    return qty === 1 ? \"Stock\" : \"Stocks\"\n  }\n\nconst Stock = props => {\n\n  return (\n    <div className=\"stock\" >\n      <div className={this.stockColor()}>\n        {props.ticker.toUpperCase()} –– {props.quantity} {this.pluralize(this.props.qty)} - $\n      </div>\n    </div>\n  )\n}\n\nexport default Stock;\n\n\n// import React, { Component } from 'react'\n\n// const IEX_API_URL = 'https://sandbox.iexapis.com/stable/'\n// const IEX_SANDBOX_SECRET_TOKEN = process.env.REACT_APP_IEX_SANDBOX_SECRET_TOKEN\n\n// class Stock extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       open_price: 0,\n//       current_price: 0,\n//       qty: this.props.qty\n//     }\n//   }\n\n//   componentDidMount = () => {\n//     fetch(`https://cloud.iexapis.com/stable/stock/${this.props.ticker}/quote?token=${IEX_SANDBOX_SECRET_TOKEN}`)\n//       .then((res) => { return res.json() })\n//       .then((data) => { return this.setState(\n\n//           {current_price: data.latestPrice,\n//           open_price: data.open}\n\n//       ); }\n//       )\n//       .then(() => this.props.portfolioValue(this.state.current_price * this.state.qty))\n//       .catch((err) => { console.log(err) })\n//   }\n\n//   componentDidUpdate = (previousProps, previousState) => {\n//     if (this.props.qty !== previousProps.qty) {\n//       this.props.portfolioValue(this.state.current_price * (this.props.qty - previousProps.qty))\n//     }\n//   }\n\n//   stockColor = () => {\n//     if (this.state.open_price > this.state.current_price) {\n//       return \"red\"\n//     } else if (this.state.open_price < this.state.current_price) {\n//       return \"green\"\n//     } else {\n//       return \"grey\"\n//     }\n//   }\n\n//   pluralize = (qty) => {\n//     return qty === 1 ? \"Stock\" : \"Stocks\"\n//   }\n\n//   render(){\n\n//     return (\n//       <div className=\"stock\">\n//         <div className={this.stockColor()}>\n//           {this.props.ticker.toUpperCase()} - {this.props.qty} {this.pluralize(this.props.qty)} - ${(this.props.qty * this.state.current_price).toFixed(2)}\n//         </div>\n//       </div>\n//     )\n//   }\n\n// }\n\n// export default Stock;"]},"metadata":{},"sourceType":"module"}