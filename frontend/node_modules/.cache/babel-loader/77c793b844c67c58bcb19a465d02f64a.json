{"ast":null,"code":"// reducer takes two arguments, state and action\n// inside the function is a switch case. default returns state. \n// return value of the reducer beccomes the new Redux state\nconst initialState = {\n  user: {},\n  transactions: [],\n  portfolio: {}\n};\nexport default ((state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case 'SET_USER':\n      return { ...state,\n        user: payload\n      };\n\n    case 'SET_TRANSACTIONS':\n      return { ...state,\n        transactions: payload\n      };\n\n    case 'SET_PORTFOLIO':\n      return { ...state,\n        portfolio: payload\n      };\n\n    case 'CLEAR_USER':\n      return { ...state,\n        user: {}\n      };\n\n    case 'UPDATE_USER_BALANCE':\n      return { ...state,\n        user: { ...state.user,\n          balance: payload\n        }\n      };\n\n    case 'ADD_TRANSACTION':\n      return { ...state,\n        transactions: [...state.transactions, { ...payload\n        }]\n      };\n\n    case 'ADD_SHARE_TO_PORTFOLIO':\n      let ticker = payload;\n\n      if (state.portfolio[ticker]) {\n        console.log('yes', state.portfolio[ticker]);\n        let total = state.portfolio[ticker].quantity;\n        let updatedStock = {\n          ticker: {\n            quantity: total++\n          }\n        };\n        return { ...state,\n          portfolio: { ...state.portfolio,\n            updatedStock\n          }\n        };\n      } else {\n        console.log('no', state.portfolio, payload);\n      }\n\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/stephenkeating/Development/code/stock-tracker-ttp/frontend/src/redux/rootReducer.js"],"names":["initialState","user","transactions","portfolio","state","type","payload","balance","ticker","console","log","total","quantity","updatedStock"],"mappings":"AAAA;AACA;AACA;AAEA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,YAAY,EAAE,EAFK;AAGnBC,EAAAA,SAAS,EAAE;AAHQ,CAArB;AAMA,gBAAe,CAACC,KAAK,GAAGJ,YAAT,EAAuB;AAAEK,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAvB,KAA6C;AAC1D,UAAQD,IAAR;AACE,SAAK,UAAL;AACE,aAAO,EAAC,GAAGD,KAAJ;AAAWH,QAAAA,IAAI,EAAEK;AAAjB,OAAP;;AACF,SAAK,kBAAL;AACE,aAAO,EAAC,GAAGF,KAAJ;AAAWF,QAAAA,YAAY,EAAEI;AAAzB,OAAP;;AACF,SAAK,eAAL;AACE,aAAO,EAAC,GAAGF,KAAJ;AAAWD,QAAAA,SAAS,EAAEG;AAAtB,OAAP;;AACF,SAAK,YAAL;AACE,aAAO,EAAC,GAAGF,KAAJ;AAAWH,QAAAA,IAAI,EAAE;AAAjB,OAAP;;AACF,SAAK,qBAAL;AACE,aAAO,EAAC,GAAGG,KAAJ;AAAWH,QAAAA,IAAI,EAAE,EAAC,GAAGG,KAAK,CAACH,IAAV;AAAgBM,UAAAA,OAAO,EAAED;AAAzB;AAAjB,OAAP;;AACF,SAAK,iBAAL;AACE,aAAO,EAAC,GAAGF,KAAJ;AAAWF,QAAAA,YAAY,EAAE,CAAC,GAAGE,KAAK,CAACF,YAAV,EAAwB,EAAC,GAAGI;AAAJ,SAAxB;AAAzB,OAAP;;AACF,SAAK,wBAAL;AACE,UAAIE,MAAM,GAAGF,OAAb;;AACA,UAAIF,KAAK,CAACD,SAAN,CAAgBK,MAAhB,CAAJ,EAA6B;AAC3BC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBN,KAAK,CAACD,SAAN,CAAgBK,MAAhB,CAAnB;AACA,YAAIG,KAAK,GAAGP,KAAK,CAACD,SAAN,CAAgBK,MAAhB,EAAwBI,QAApC;AACA,YAAIC,YAAY,GAAG;AAACL,UAAAA,MAAM,EAAE;AAACI,YAAAA,QAAQ,EAAED,KAAK;AAAhB;AAAT,SAAnB;AACA,eAAO,EAAC,GAAGP,KAAJ;AACCD,UAAAA,SAAS,EAAE,EACT,GAAGC,KAAK,CAACD,SADA;AAETU,YAAAA;AAFS;AADZ,SAAP;AAMD,OAVD,MAUO;AACLJ,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBN,KAAK,CAACD,SAAxB,EAAmCG,OAAnC;AACD;;AACD,aAAO,EAAC,GAAGF;AAAJ,OAAP;;AACF;AACE,aAAOA,KAAP;AA9BJ;AAgCD,CAjCD","sourcesContent":["// reducer takes two arguments, state and action\n// inside the function is a switch case. default returns state. \n// return value of the reducer beccomes the new Redux state\n\nconst initialState = {\n  user: {},\n  transactions: [],\n  portfolio: {}\n}\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case 'SET_USER':\n      return {...state, user: payload};\n    case 'SET_TRANSACTIONS':\n      return {...state, transactions: payload};\n    case 'SET_PORTFOLIO':\n      return {...state, portfolio: payload};\n    case 'CLEAR_USER':\n      return {...state, user: {}};\n    case 'UPDATE_USER_BALANCE':\n      return {...state, user: {...state.user, balance: payload}};\n    case 'ADD_TRANSACTION':\n      return {...state, transactions: [...state.transactions, {...payload}]};\n    case 'ADD_SHARE_TO_PORTFOLIO':\n      let ticker = payload\n      if (state.portfolio[ticker]) {\n        console.log('yes', state.portfolio[ticker])\n        let total = state.portfolio[ticker].quantity\n        let updatedStock = {ticker: {quantity: total++}} \n        return {...state,\n                portfolio: {\n                  ...state.portfolio,\n                  updatedStock\n                }\n        }\n      } else {\n        console.log('no', state.portfolio, payload)\n      }\n      return {...state};\n    default:\n      return state;\n  }\n};"]},"metadata":{},"sourceType":"module"}