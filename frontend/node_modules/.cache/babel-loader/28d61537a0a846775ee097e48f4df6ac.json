{"ast":null,"code":"var _jsxFileName = \"/Users/stephenkeating/Development/code/stock-tracker-ttp/frontend/src/Pages/Login.js\";\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport userActions from '../redux/actions';\n\nconst LoginPage = props => {\n  // initializing dispatch\n  const dispatch = useDispatch(); // Setting up local state using the useState hook\n\n  const [loginForm, setLoginForm] = useState({\n    username: '',\n    password: ''\n  });\n  const loggedIn = useSelector(state => state.user.username); // controlled form functions\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(userActions.loginUserToDB(loginForm));\n\n    if (loggedIn) {\n      props.history.push('/');\n    } else {\n      alert(\"Try Again\");\n    }\n  }; // const handleSubmit = e => {\n  //   e.preventDefault();\n  //   userActions.loginUserToDB(loginForm)\n  //   .then(data => {\n  //     if(data.errors) {\n  //         let errors = data.erros\n  //         alert(\"Unable to login\")\n  //     } else {\n  //       dispatch(userActions.setUserAction(data.user));\n  //       localStorage.setItem('token', data.token);\n  //       props.history.push('/');\n  //     }\n  //   })\n  // };\n\n\n  const handleChange = e => setLoginForm({ ...loginForm,\n    [e.target.name]: e.target.value\n  }); // Destructuring keys from our local state to use in the form\n\n\n  const {\n    username,\n    password\n  } = loginForm; // Component code\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Login Page\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    value: username,\n    onChange: handleChange,\n    placeholder: \"Username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    placeholder: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }));\n};\n\nexport default LoginPage;","map":{"version":3,"sources":["/Users/stephenkeating/Development/code/stock-tracker-ttp/frontend/src/Pages/Login.js"],"names":["React","useState","useDispatch","userActions","LoginPage","props","dispatch","loginForm","setLoginForm","username","password","loggedIn","useSelector","state","user","handleSubmit","e","preventDefault","loginUserToDB","history","push","alert","handleChange","target","name","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,WAAP,MAAwB,kBAAxB;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB;AACA,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B,CAFyB,CAGzB;;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC;AACzCQ,IAAAA,QAAQ,EAAE,EAD+B;AAEzCC,IAAAA,QAAQ,EAAE;AAF+B,GAAD,CAA1C;AAKA,QAAMC,QAAQ,GAAGC,WAAW,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWL,QAArB,CAA5B,CATyB,CAWzB;;AACA,QAAMM,YAAY,GAAGC,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAX,IAAAA,QAAQ,CAACH,WAAW,CAACe,aAAZ,CAA0BX,SAA1B,CAAD,CAAR;;AACA,QAAII,QAAJ,EAAc;AACZN,MAAAA,KAAK,CAACc,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACD,KAFD,MAEO;AACLC,MAAAA,KAAK,CAAC,WAAD,CAAL;AACD;AACF,GARD,CAZyB,CAsBzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMC,YAAY,GAAGN,CAAC,IACpBR,YAAY,CAAC,EAAE,GAAGD,SAAL;AAAgB,KAACS,CAAC,CAACO,MAAF,CAASC,IAAV,GAAiBR,CAAC,CAACO,MAAF,CAASE;AAA1C,GAAD,CADd,CArCyB,CAwCzB;;;AACA,QAAM;AAAEhB,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBH,SAA/B,CAzCyB,CA2CzB;;AACA,SACE;AAAM,IAAA,QAAQ,EAAEQ,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAEN,QAHT;AAIE,IAAA,QAAQ,EAAEa,YAJZ;AAKE,IAAA,WAAW,EAAC,UALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EASE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAEZ,QAHT;AAIE,IAAA,QAAQ,EAAEY,YAJZ;AAKE,IAAA,WAAW,EAAC,UALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAgBE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CADF;AAoBD,CAhED;;AAkEA,eAAelB,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport userActions from '../redux/actions';\n\nconst LoginPage = props => {\n  // initializing dispatch\n  const dispatch = useDispatch();\n  // Setting up local state using the useState hook\n  const [loginForm, setLoginForm] = useState({\n    username: '',\n    password: ''\n  });\n\n  const loggedIn = useSelector(state => state.user.username);\n\n  // controlled form functions\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(userActions.loginUserToDB(loginForm));\n    if (loggedIn) {\n      props.history.push('/');\n    } else {\n      alert(\"Try Again\")\n    }\n  };\n\n  // const handleSubmit = e => {\n  //   e.preventDefault();\n  //   userActions.loginUserToDB(loginForm)\n  //   .then(data => {\n  //     if(data.errors) {\n  //         let errors = data.erros\n  //         alert(\"Unable to login\")\n  //     } else {\n  //       dispatch(userActions.setUserAction(data.user));\n  //       localStorage.setItem('token', data.token);\n  //       props.history.push('/');\n  //     }\n  //   })\n  // };\n\n  const handleChange = e =>\n    setLoginForm({ ...loginForm, [e.target.name]: e.target.value });\n\n  // Destructuring keys from our local state to use in the form\n  const { username, password } = loginForm;\n\n  // Component code\n  return (\n    <form onSubmit={handleSubmit}>\n      <h1>Login Page</h1>\n      <input\n        type=\"text\"\n        name=\"username\"\n        value={username}\n        onChange={handleChange}\n        placeholder=\"Username\"\n      />\n      <input\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        onChange={handleChange}\n        placeholder=\"Password\"\n      />\n      <input type=\"submit\" />\n    </form>\n  );\n};\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}